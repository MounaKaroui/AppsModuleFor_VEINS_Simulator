//
// Generated file, do not edit! Created by nedtool 5.0 from veins/modules/messages/WaveServiceAdvertisement.msg.
//

#ifndef __WAVESERVICEADVERTISEMENT_M_H
#define __WAVESERVICEADVERTISEMENT_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/base/utils/Coord.h"
#include "veins/modules/messages/WaveShortMessage_m.h"
// }}

/**
 * Class generated from <tt>veins/modules/messages/WaveServiceAdvertisement.msg:29</tt> by nedtool.
 * <pre>
 * packet WaveServiceAdvertisment extends WaveShortMessage
 * {
 *     int targetChannel;
 *     string serviceDescription;
 * }
 * </pre>
 */
class WaveServiceAdvertisment : public ::WaveShortMessage
{
  protected:
    int targetChannel;
    ::omnetpp::opp_string serviceDescription;

  private:
    void copy(const WaveServiceAdvertisment& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WaveServiceAdvertisment&);

  public:
    WaveServiceAdvertisment(const char *name=nullptr, int kind=0);
    WaveServiceAdvertisment(const WaveServiceAdvertisment& other);
    virtual ~WaveServiceAdvertisment();
    WaveServiceAdvertisment& operator=(const WaveServiceAdvertisment& other);
    virtual WaveServiceAdvertisment *dup() const {return new WaveServiceAdvertisment(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getTargetChannel() const;
    virtual void setTargetChannel(int targetChannel);
    virtual const char * getServiceDescription() const;
    virtual void setServiceDescription(const char * serviceDescription);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WaveServiceAdvertisment& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WaveServiceAdvertisment& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WAVESERVICEADVERTISEMENT_M_H

